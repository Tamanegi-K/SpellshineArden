<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_donut</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create Variables

//Extra Speed Stuff
ExtraSpeedSettings = false
SpeedTime = 0
SpeedLoop = 0
SpeedType = 0 //speedcurve: 0 - instant, 1 - constant, 2 - lerp
speed = 0
SpeedNew = 0
SpeedAppend = 0

SpeedStep = 0
SpeedGoal = SpeedNew
SpeedBefore = speed
SpeedSwitch = 0 //0 - init, 1 - new, 2 - append


//Colour/Sprite Assignment
image_speed = 0 //do not touch
ColourLimit = 0


//Extra Curve Stuff
ExtraCurveSettings = false
CurveTime = 0
CurveLoop = 0
CurveType = 0 //speedcurve: 0 - instant, 1 - constant, 2 - lerp
direction = 270
CurveNew = 0
CurveAppend = 0

CurveStep = 0
CurveSwitch = 0 //0 - init, 1 - new, 2 - append


//Bounces
Bounces = 0


//Depths
DepthPriority = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>effect_create_above(ef_ring, x, y, 0, c_white)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Bullet Movement

//Curving
if ExtraCurveSettings == true
    {
    //Instant Direction Change
    if CurveType == 0
        {
        if (CurveStep &lt;= 0) and (CurveLoop &gt; 0)
            {
            if CurveSwitch == 1
                {
                direction = CurveNew
                CurveSwitch = 2
                }
                
            else
                {
                direction = CurveAppend
                CurveSwitch = 1
                }
                
            CurveLoop -= 1
            CurveStep = CurveTime
            }
            
        else
            {CurveStep -= 1}
        }
    
    //Gradual Direction Change
    else if CurveType == 1
        {
        if (CurveStep &lt;= 0) and (CurveLoop &gt; 0)
            {
            if CurveSwitch == 1
                {CurveSwitch = 2}
                
            else
                {CurveSwitch = 1}
                
            CurveLoop -= 1
            CurveStep = CurveTime
            }
            
        else if (CurveLoop &gt; 0)
            {
            if CurveSwitch == 1
                {direction += CurveAppend}
                
            else
                {direction += CurveNew}
            
            CurveStep -= 1
            }
        }
    }
    
/*else
    {direction = CurveInit}*/
    
// // // // // // // // // // // // //

//Speed (and the wacky stuff)
if ExtraSpeedSettings == true
    {
    //Instant Speed Change
    if SpeedType == 0
        {
        if (SpeedStep &lt;= 0) and (SpeedLoop &gt; 0)
            {
            if SpeedSwitch == 1
                {
                speed = SpeedAppend
                SpeedSwitch = 2
                }
                
            else
                {
                speed = SpeedNew
                SpeedSwitch = 1
                }
                
            SpeedLoop -= 1
            SpeedStep = SpeedTime
            }
            
        else
            {SpeedStep -= 1}
        }
    
    //Gradual Speed Change
    else if SpeedType == 1
        {
        if (SpeedStep &lt;= 0) and (SpeedLoop &gt; 0)
            {
            if SpeedSwitch == 1
                {
                speed = SpeedAppend
                SpeedBefore = SpeedAppend
                SpeedGoal = SpeedNew
                SpeedSwitch = 2
                }
                
            else
                {
                speed = SpeedNew
                SpeedBefore = SpeedNew
                SpeedGoal = SpeedAppend
                SpeedSwitch = 1
                }
                
            SpeedLoop -= 1
            SpeedStep = SpeedTime
            }
            
        else if (SpeedLoop &gt; 0)
            {
            SpeedStep -= 1
            speed += (SpeedGoal - SpeedBefore) / SpeedTime
            }
        }
    
    //Lerp Speed Change
    else if SpeedType == 2
        {
        if (SpeedStep &lt;= 0) and (SpeedLoop &gt; 0)
            {
            if SpeedSwitch == 1
                {
                SpeedGoal = SpeedNew
                SpeedSwitch = 2
                }
                
            else
                {
                SpeedGoal = SpeedAppend
                SpeedSwitch = 1
                }
                
            SpeedLoop -= 1
            SpeedStep = SpeedTime
            }
            
        else
            {
            SpeedStep -= 1
            speed = lerp(speed, SpeedGoal, 0.075)
            }
        }
    }
    
else
    {speed = SpeedInit}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Depth
depth = -(y + (DepthPriority * 50))
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///If Gamer Die, me Die Too

if !instance_exists(obj_Gamer)
    {image_blend = c_gray}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Gamer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy(obj_EnemyFire)
instance_destroy(other)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_DeletBorder">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="4" ename="obj_Border">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if Bounces &gt; 0
    {
    bouncespeckix(other)
    //move_bounce_all(false)
    Bounces -= 1
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sprite Setting

IWokeUpLikeThis = sprite_get_name(sprite_index)
//draw_text(x + 10, y, speed)

    //If a sprite doesn't need rotations (round/circular bullets)
if (IWokeUpLikeThis != "spr_ball") and (IWokeUpLikeThis != "spr_donut") and (IWokeUpLikeThis != "spr_glower") and (IWokeUpLikeThis != "spr_orb") and (IWokeUpLikeThis != "spr_pew") and (IWokeUpLikeThis != "spr_sphere") and (IWokeUpLikeThis != "spr_titan")
    {
    image_angle = direction
    }
    
    //Glow/Blending ones
if (IWokeUpLikeThis == "spr_glower") or (IWokeUpLikeThis == "spr_titan")
    {
    //draw_set_blend_mode(bm_add)
    draw_set_blend_mode_ext(bm_src_alpha, bm_one);
    draw_self()
    draw_set_blend_mode(bm_normal)
    }
else
    {draw_self()}
    
    //Titan Stuff
if ((IWokeUpLikeThis == "spr_titan"))
    {
    image_xscale = 1.23
    image_yscale = 1.23 //NOTE: remove both after sprite has been replaced
    
    if (image_index &gt;= ColourLimit)
        {image_index = ColourLimit - 7}
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="85">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*show_message(Curve)
show_message(CurveTimer)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
