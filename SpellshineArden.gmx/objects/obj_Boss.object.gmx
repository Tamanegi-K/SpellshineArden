<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_PlaceholderBoss</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>testalarm = 70
testtimer = 99.9 * 60
phase = 0
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// = = = = = = = = = = = = = = = = = = = = = = = = = =
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create Variables
global.HPMax = 99999990 //HP Value, greenbar
global.HP = global.HPMax 
global.HPDecay = 3 //Time before Increment takes place
global.HPDecdec = 0 //Decay is applied to this variable
global.HPState = "Normal" //Normal, Heal, Damage
global.HPIncrement = global.HPMax //Background coloured bar
BackCol = c_white
c_fanblue = make_color_rgb(155, 155, 255)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///phase1
if (phase == 1) and (image_alpha == 1)
{

if testalarm &gt;= 0
    {
    testalarm -= 1
    }

else
    {
    testalarm = 115
    }

if (testalarm == 35) or (testalarm == 85)
    {
    FireAngle = aim_player(x, y)
    repeat (50)
        {
        fire(x, y, "talisman", 7, 0, FireAngle, 0, 0, spdline(15, 1, 0, 7, 1.4, 0), 0, 0, -1, 0)
        FireAngle += 7.2
        }
        
    PewSpeed = 1.6
    repeat (5)
        {
        fire(x, y, "shard", 10, 1, FireAngle, 0, 0, PewSpeed, 0, 0, -1, 0)
        fire(x, y, "shard", 10, 1, FireAngle + 30, 0, 0, PewSpeed, 0, 0, -1, 0)
        fire(x, y, "shard", 10, 1, FireAngle - 30, 0, 0, PewSpeed, 0, 0, -1, 0)
        PewSpeed += 0.5
        }
    }
    
else if (testalarm == 20) or (testalarm == 70)
    {
    FireAngle = aim_player(x, y) + 5
    repeat (20)
        {
        repeat(3)            
            {
            fire(x, y, "talisman", 0, 0, FireAngle, 0, 0, spdline(16, 1, 0, 6.5, 1.4, 0), 0, 0, -1, 0)
            FireAngle += 3
            }
        FireAngle += 9
        }
    }
    
if testalarm == 3
    {
    if instance_number(sys_BossMover) &lt;= 0
        {
        Mover = instance_create(x, y, sys_BossMover)
        Mover.Activity = 10
        }
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///phase2
if (phase == 2) and (image_alpha == 1)
{
intensity = global.HPMax / global.HP

if testalarm &gt;= 0
    {
    testalarm -= 1
    }

else
    {
    testalarm = 2
    }

if testalarm == 2
    {
    repeat (10)
        {
        if global.HP &lt; (global.HPMax * 0.15)
            {intensity = 2.4}
        else if global.HP &lt; (global.HPMax * 0.25)
            {intensity = 1.8}    
        else if global.HP &lt; (global.HPMax * 0.45)
            {intensity = 1.2}
        else if global.HP &lt; (global.HPMax * 0.7)
            {intensity = 0.6}
        else
            {intensity = 0}
              
        fire(x, y, choose("ball", "orb", "petal", "pew", "shard", "talisman"), irandom_range(0, 11), random(2), random(360), 0, 0, random_range(1 + intensity, 2 + intensity), 0, 0, -1, 0)
        }

    if instance_number(sys_BossMover) &lt;= 0
        {
        Mover = instance_create(x, y, sys_BossMover)
        Mover.Activity = 10
        }
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///phase3
if (phase == 3) and (image_alpha == 1)
{

if testalarm &gt;= 0
    {
    testalarm -= 1
    }

else
    {
    testalarm = 280
    
    Turn = choose("CW", "ACW")
    Spinner = testalarm - 2
    RandoStart = irandom(360)
    AngleInc = 0
    AngleVel = 0.24
    }

if (testalarm &gt; 120) and (Spinner &gt;= testalarm) 
    {
    fire(x, y, "shard", 6, 2,   0 + RandoStart + AngleInc, 0, 0, spdline(10, 1, 1, 12.8, 2.3, 2.3), 0, 0, -1, 0)
    fire(x, y, "shard", 6, 2, 180 + RandoStart + AngleInc, 0, 0, spdline(10, 1, 1, 12.8, 2.3, 2.3), 0, 0, -1, 0)
    repeat (floor(1 + (AngleVel / 10)))
        {fire(x, y, "pew", 7, 0, random(360), 0, 0, spdline(5, 1, 1, 16, 1.6, 1.6), 0, 0, -1, 0)}
    
    if Turn == "ACW"
        {AngleInc += 4 + AngleVel}
    else if Turn == "CW"
        {AngleInc -= 4 + AngleVel}
        
    Spinner = testalarm - 2
    AngleVel += 0.33
    }
    
if (testalarm == 120)
    {
    FireAngle = aim_player(x, y)
    SpeedDown = 3.2
    
    repeat(8)
        {
        repeat (42)
            {
            fire(x, y, "petal", 8, 1, FireAngle, 12.7, 0.45, spdline(20, 1, 2, SpeedDown * 5, SpeedDown, SpeedDown), 0, 0, -1, 0)
            if Turn == "ACW"
                {FireAngle += 8.571}
            else if Turn == "CW"
                {FireAngle -= 8.571}
            }

        if Turn == "ACW"
            {FireAngle += 10}
        else if Turn == "CW"
            {FireAngle -= 10}
        SpeedDown -= 0.29
        }
        
    if instance_number(sys_BossMover) &lt;= 0
        {
        Mover = instance_create(x, y, sys_BossMover)
        Mover.Activity = 13
        }
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///phase4
if (phase == 4) and (image_alpha == 1)
{

if testalarm &gt;= 0
    {
    testalarm -= 1
    }

else
    {
    testalarm = 276
    }

if (testalarm == 59) or (testalarm == 128) or (testalarm == 197) or (testalarm == 266)
    {
    Curvature = choose(10, -10)
    ThisWay = choose(random_range(142, 262), 22)
    repeat(5)
        {
        SpdDwn = 0.2
        GapWider = 0.4
        Coleur = 11
        PewChange = 0
        
        fire(x, y, "petal", 0, 2, ThisWay, Curvature, 0.5, 3, 1, 0, -1, 0)
        fire(x, y, "donut", 1, 0, ThisWay, Curvature, 0.5, 2, 1, 0, -1, 0)
        
        repeat(7)
            {
            fire(x, y,  "pew" , 2, 0, ThisWay, Curvature, 0.5, 2 - PewChange, 1, 0, -1, 0)
            PewChange += 0.13
            }
            
        repeat(5)
            {
            repeat(2)
                {
                fire(x, y, "petal", Coleur, 1, ThisWay + GapWider, Curvature, 0.5, 3 - SpdDwn, 1, 0, -1, 0)
                fire(x, y, "petal", Coleur, 1, ThisWay - GapWider, Curvature, 0.5, 3 - SpdDwn, 1, 0, -1, 0)
                }
            SpdDwn += 0.2
            GapWider += 1
            Coleur -= 1
            }
        ThisWay += 34
        }
    }
    
if (testalarm == 150)
    {
    if instance_number(sys_BossMover) &lt;= 0
        {
        Mover = instance_create(x, y, sys_BossMover)
        Mover.Activity = 14
        }
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///phase5
if (phase == 5) and (image_alpha == 1)
{

if testalarm &gt;= 0
    {testalarm -= 1}

else
    {
    testalarm = 26
    }

if (testalarm &lt;= 20) and (testalarm &gt;= 5) and ((testalarm mod 2) == 0)
    {
    Prata = 0
    
    if (Laser mod 4) == 0 //straight shots
        {
        repeat (20)
            {
            fire(x, y, "talisman", 1, 0, TickTock + Prata, 0, 0, spdline(14, 1, 0, 8, 1.3, 0), 0, 0, -1, 0)
            Prata += 18
            }
        }
        
    repeat (16) //ga- I mean, curve shots
        {
        fire(x, y, "petal", Qock, 0, TickTock + Prata, Switch, 0.4, spdline(15, 50, 1, 7.5, 2.5, 4), 0, 0, -1, 0)
        Prata += 22.5
        }
    }
    
if (testalarm == 1)
    {
    if instance_number(sys_BossMover) &lt;= 0
        {
        Mover = instance_create(x, y, sys_BossMover)
        Mover.Activity = 8
        }
        
        Switch *= -1
        TickTock += 133
        Laser += 1
        
        if Qock == 10
            {Qock = 11}
        else
            {Qock = 10}
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///phase6
if (phase == 6) and (image_alpha == 1)
{

if testalarm &gt;= 0
    {testalarm -= 1}

else
    {
    Angleh = random(360)
    Papang = 0
    testalarm = 295
    }

if (testalarm &gt;= 45) and ((testalarm mod 12) == 0) and (BeginFire == 1)
    {
    Col = 0
    Diff = 0
    repeat(12)
        {
        fire(x, y, "pew", Col, 0, Angleh + 0, 0, 0, spdline(50, 1, 2, 8.6 - (Diff * 2), 0.2, 4.6 - Diff), 0, 0, 0, 0)
        fire(x, y, "orb", Col, 0, Angleh + 120, 0, 0, spdline(50, 1, 2, 8.6 - (Diff * 2), 0.2, 4.6 - Diff), 0, 0, 0, 0)
        fire(x, y, "petal", Col, 0, Angleh + 240, 0, 0, spdline(50, 1, 2, 8.6 - (Diff * 2), 0.2, 4.6 - Diff), 0, 0, 0, 0)
        Col += 1
        Diff += 0.25
        Angleh += 9
        }
    Angleh += 7
    }
    
if (testalarm &gt;= 45) and ((testalarm mod 43) == 0) and (BeginFire == 2)
    {
    repeat(3)
        {
        n = 0
        Col = 0
        Slowo = 0
        Pang = aim_player(x, y) + Papang
        repeat (12)
            {
            fire(x, y, Shape[n], Col, 0, Pang, 0, 0, spdline(20, 1, 2, 5.2 - (Slowo * 2), 0.5, 7.2 - Slowo), 0, 0, 0, 0)
            
            for (i = 0; i &lt;= Col; i += 1)
                {fire(x, y, Shape[n], Col, 12 - i, Pang - (i * 5.25), 0, 0, spdline(20, 1, 2, 5.2 - (Slowo * 2), 0.5, 7.2 - Slowo), 0, 0, 0, 0)}
            for (i = 0; i &lt;= Col; i += 1)
                {fire(x, y, Shape[n], Col, 12 - i, Pang + (i * 5.25), 0, 0, spdline(20, 1, 2, 5.2 - (Slowo * 2), 0.5, 7.2 - Slowo), 0, 0, 0, 0)}
    
            Col += 1
            Slowo += 0.3
            if n &gt;= 2
                {n = 0}
            else
                {n += 1}
            }
        Papang += 120
        }
    }
    
if (testalarm &gt;= 45) and ((testalarm mod 12) == 0) and (BeginFire == 3)
    {
    Col = 0
    Diff = 0
    repeat(12)
        {
        fire(x, y, "pew", Col, 0, Angleh + 0, 0, 0, spdline(50, 1, 2, 8.6 - (Diff * 2), 0.2, 4.6 - Diff), 0, 0, 0, 0)
        fire(x, y, "orb", Col, 0, Angleh + 120, 0, 0, spdline(50, 1, 2, 8.6 - (Diff * 2), 0.2, 4.6 - Diff), 0, 0, 0, 0)
        fire(x, y, "petal", Col, 0, Angleh + 240, 0, 0, spdline(50, 1, 2, 8.6 - (Diff * 2), 0.2, 4.6 - Diff), 0, 0, 0, 0)
        Col += 1
        Diff += 0.25
        Angleh -= 9
        }
    Angleh -= 7
    }
    
if (testalarm &gt;= 45) and ((testalarm mod 3) == 0) and (BeginFire == 4)
    {
    Pang = 0
    repeat(6)
        {
        if Col &gt; 11
            {Col = 0}  
            
        fire(x, y, Shape[n], Col, 0, Papang + Pang, 0, 0, spdline(33, 1, 2, 6.2, 0.5, 3.5), 0, 0, 0, 0)
        fire(x, y, Shape[n], Col, 0, Papang + Pang + 180, 0, 0, spdline(33, 1, 2, 6.2, 0.5, 3.5), 0, 0, 0, 0)
        
        if n &gt;= 2
            {n = 0}
        else
            {n += 1}
        
        if Ghi &gt;= 9
            {
            Ghi = 0
            Col += 1
            }
        else
            {Ghi += 1}
            
        Pang -= 14.3
        }
    Papang -= 36
    }
    
if (testalarm == 1)
    {
    if instance_number(sys_BossMover) &lt;= 0
        {
        Mover = instance_create(x, y, sys_BossMover)
        Mover.Activity = 11
        
        Col = 0

        if BeginFire &gt;= 4
            {BeginFire = 1}
        else
            {BeginFire += 1}
        }
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///phasedebug
if (phase == 69) and (image_alpha == 1)
{

if testalarm &gt;= 0
    {
    testalarm -= 1
    }



if (testalarm &gt; 0) and (testalarm &lt;= 35)
    {
    FireAngle = aim_player(x, y)
    fire(x, y, "ball", 10, 1, FireAngle, 0, 0, spdline(10, 160, 2, 7, 0.2, 11), 999, 0, 0, 0)
    }

    
if testalarm == 3
    {
    if instance_number(sys_BossMover) &lt;= 0
        {
        Mover = instance_create(x, y, sys_BossMover)
        Mover.Activity = 99999
        }
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Timer Shenanigans
if phase &gt; 0
{
if testtimer &lt;= 0
    {
    testtimer = 0
    if instance_exists(obj_Gamer)
        {instance_destroy(obj_Gamer)}
    }
    
else if (testtimer &gt; 0) and (instance_exists(obj_Gamer)) and (image_alpha == 1)
    {testtimer -= 1}
}

if keyboard_check_pressed(vk_add)
    {testtimer += 60}
    
if keyboard_check_pressed(vk_subtract)
    {testtimer -= 60}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// = = = NOTE: TO TRANSFER HP SHIT TO A CONTROLLER = = =
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Decay Countdown &amp; Increments

if (global.HPDecdec &gt; 0) //and (global.HPIncrement == global.HPPreIncrement)
    {
    global.HPDecdec -= 1
    }
    
/*if (global.HPIncrement != global.HPPreIncrement) and (global.HPDecdec &gt; 0)
    {
    global.HPPreIncrement = global.HPIncrement
    }
    

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ZeroMax Limiting

if global.HP &gt; global.HPMax
    {
    global.HP = global.HPMax
    }
    
else if global.HP &lt; 0
    {
    global.HP = 0
    }    
    
    
if global.HPIncrement &gt; global.HPMax
    {
    global.HPIncrement = global.HPMax
    }
    
else if global.HPIncrement &lt; 0
    {
    global.HPIncrement = 0
    } 
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///HP Lerping

if (global.HPState == "Damage") and (global.HPDecdec &lt;= 0)
    {
    //show_message("oof")
    Change = lerp(0, global.HPIncrement - global.HP, 0.2)
    global.HPIncrement -= Change
    
    if round(Change) == 0
        {
        global.HPState = "Normal"
        global.HPIncrement = global.HP
        }
    }
    
else if (global.HPState == "Healing") and (global.HPDecdec &lt;= 0)
    {
    //show_message("oof")
    Change = lerp(0, global.HPIncrement - global.HP, 0.2)
    global.HP += Change
    
    if round(Change) == 0
        {
        global.HPState = "Normal"
        global.HP = global.HPIncrement
        }
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///BackCol Assignment

if global.HPState == "Normal"
    {
    BackCol = c_white
    }
    
else if global.HPState == "Damage"
    {
    BackCol = c_red
    }
    
else if global.HPState == "Healing"
    {
    BackCol = c_fanblue
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DebugTimeStop
if keyboard_check(vk_pagedown)
    {room_speed = 1}
else
    {room_speed = 60}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_GamerBasicFire">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if image_alpha == 1
    {
    effect_create_above(ef_smokeup, other.x, other.y, 0, c_purple)
    instance_destroy(other)
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if image_alpha == 1
{

if global.HPState != "Healing"
    {
    global.HP -= 6
    global.HPDecdec = global.HPDecay
    global.HPState = "Damage"
    }

if global.HP &lt;= 0
    {
    effect_create_above(ef_explosion, x, y, 2, c_red)
    effect_create_above(ef_explosion, x, y, 1, c_yellow)
    effect_create_above(ef_explosion, x, y, 0, c_white)
    image_alpha = 0
    instance_destroy(obj_EnemyFire)
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Top Statuses

    //Touch these
BarX1 = 260
BarX2 = 933
BarY1 = 36
BarY2 = 63

TimerTxtX = 996
TimerTxtY = 38
TimerCol = c_white
Timer20s = c_yellow
Timer10s = c_red

    //Ignore these unless you know what you're doing
    
//Back
draw_healthbar(BarX1, BarY1, BarX2, BarY2, (global.HPIncrement / global.HPMax) * 100, c_black, BackCol, BackCol, 0, true, true)

//Front
draw_healthbar(BarX1, BarY1, BarX2, BarY2, (global.HP / global.HPMax) * 100, c_black, c_lime, c_lime, 0, false, false)

//Timer Text
draw_set_valign(fa_top)
draw_set_halign(fa_right)

draw_set_font(fnt_PressStart2P16)
bs = floor(string_format((testtimer / 60), 2, 1))
if testtimer &lt;= (10 * 60)
    {draw_text_outline(TimerTxtX, TimerTxtY, bs, Timer10s, 3, c_black)}
else if testtimer &lt;= (20 * 60)
    {draw_text_outline(TimerTxtX, TimerTxtY, bs, Timer20s, 3, c_black)}
else
    {draw_text_outline(TimerTxtX, TimerTxtY, bs, TimerCol, 3, c_black)}

draw_set_font(fnt_PressStart2P8)
fuckin = string_format((testtimer / 60), 2, 1)
mygod = string_char_at(fuckin, string_length(fuckin))
if testtimer &lt;= (10 * 60)
    {draw_text_outline(TimerTxtX + 25, TimerTxtY + 13, "." + mygod, Timer10s, 2, c_black)}
else if testtimer &lt;= (20 * 60)
    {draw_text_outline(TimerTxtX + 25, TimerTxtY + 13, "." + mygod, Timer20s, 2, c_black)}
else
    {draw_text_outline(TimerTxtX + 25, TimerTxtY + 13, "." + mygod, TimerCol, 2, c_black)}
    
draw_set_font(-1)
draw_set_color(c_white)

/*
if (global.HP &gt;= (global.HPMax / 3))
    {draw_set_color(c_white)}
else
    {draw_set_color(c_red)}
    
draw_text(64, 128, "HP " + string(round(global.HP)) + " / " + string(global.HPMax))

draw_set_color(c_white)
//draw_text(64, 200, global.HPIncrement)
draw_text(64, 300, global.HPDecdec)

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(120, 180, string(testalarm))
draw_text(100, 200, y)
draw_text(100, 220, string(room_height))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="115">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>phase = 69
global.HPMax = 2000
instance_destroy(obj_EnemyFire)
global.HP = global.HPMax
image_alpha = 1

testtimer = 99.9 * 60
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>phase = 6
global.HPMax = 2540
instance_destroy(obj_EnemyFire)
global.HP = global.HPMax
image_alpha = 1

testalarm = 70
testtimer = 40.0 * 60

Col = 0
Diff = 0
Angleh = 0
BeginFire = 0
Pang = 0
Papang = 0
Ghi = 0
Shape[0] = "shard"
Shape[1] = "petal"
Shape[2] = "pew"
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>phase = 5
global.HPMax = 1150
instance_destroy(obj_EnemyFire)
global.HP = global.HPMax
image_alpha = 1

testalarm = 70
testtimer = 25.6 * 60

Switch = 0.73
TickTock = 0
Laser = 0
Qock = 10
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="52">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>phase = 4
global.HPMax = 1700
instance_destroy(obj_EnemyFire)
global.HP = global.HPMax
image_alpha = 1

testalarm = 70
testtimer = 34.3 * 60
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="51">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>phase = 3
global.HPMax = 1650
instance_destroy(obj_EnemyFire)
global.HP = global.HPMax
image_alpha = 1

testalarm = 70
testtimer = 26.6 * 60
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>phase = 2
global.HPMax = 2000
instance_destroy(obj_EnemyFire)
global.HP = global.HPMax
image_alpha = 1

testalarm = 70
testtimer = 44 * 60
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="49">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>phase = 1
global.HPMax = 900
instance_destroy(obj_EnemyFire)
global.HP = global.HPMax
image_alpha = 1

testalarm = 70
testtimer = 31.5 * 60
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="35">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.HP = 60
global.HPDecdec = global.HPDecay
global.HPState = "Damage"
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
